<component
  xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/component/1.1.2"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/component/1.1.2 http://maven.apache.org/xsd/component-1.1.2.xsd">
  <dependencySets>
    <dependencySet>
      <!-- all dependency jars (except oj disabled, cause ${extension} was 
        not resolved) -->
      <!--outputFileNameMapping>${artifactId}-${version}.${extension}</outputFileNameMapping -->
      <outputDirectory>/lib</outputDirectory>
      <unpack>false</unpack>
      <scope>runtime</scope>
      <useTransitiveFiltering>true</useTransitiveFiltering>
      <!-- exclude OJ.jar here because we pack our own flavors
           nolang, nosrc and add them via assembly -->
      <useProjectArtifact>false</useProjectArtifact>
      <excludes>
        <!-- exclude batik and js which is a batik dependency
             we'll selectively include needed deps in cmp_plus.xml -->
        <exclude>*:batik-*</exclude>
        <exclude>rhino:js</exclude>
        <!-- exclude junit and hamcrest from CORE build -->
        <exclude>junit:*</exclude>
        <exclude>org.hamcrest:hamcrest-core</exclude>
        <!-- exclude imageio-ext from CORE build, but include some selected jars below -->
        <exclude>it.geosolutions.imageio-ext:*</exclude>
      </excludes>
    </dependencySet>
    <dependencySet>
      <outputDirectory>/lib/ext/imageio-ext</outputDirectory>
      <useProjectArtifact>false</useProjectArtifact>
      <includes>
        <include>*:imageio-ext-gdalframework</include>
        <include>*:imageio-ext-geocore</include>
        <include>*:imageio-ext-streams</include>
        <include>*:imageio-ext-tiff:jar:1.1.13</include>
        <include>*:imageio-ext-utilities</include>
        <include>*:gdal</include>
      </includes>
    </dependencySet>
  </dependencySets>
  <fileSets>
    <fileSet>
      <directory>scripts</directory>
      <outputDirectory>/bin</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>**</include>
      </includes>
      <excludes>
        <exclude>*.xml</exclude>
      </excludes>
    </fileSet>
    <fileSet>
      <directory>scripts</directory>
      <outputDirectory>/bin</outputDirectory>
      <includes>
        <include>*.xml</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>etc</directory>
      <outputDirectory>/bin</outputDirectory>
      <includes>
        <include>log4j.xml</include>
      </includes>
    </fileSet>
    <!-- <fileSet> <directory>docs</directory> <excludes> <exclude>**/*.doc</exclude> 
      </excludes> <outputDirectory>/docs</outputDirectory> </fileSet> -->
    <fileSet>
      <directory>etc</directory>
      <outputDirectory>/</outputDirectory>
      <includes>
        <!--filtering with assembly didn't work out, 
        filter in basebuild now and package result here
        see below-->
        <!--include>readme.txt</include-->
        <include>licenses/*</include>
      </includes>
      <filtered>false</filtered>
    </fileSet>
    <fileSet>
      <directory>.</directory>
      <outputDirectory>/</outputDirectory>
      <includes>
        <!-- >include>Changes.txt</include-->
        <include>lib/ext/**</include>
        <include>lib/native/readme.txt</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>${project.build.directory}/lib.ext.core/</directory>
      <outputDirectory>/lib/ext/</outputDirectory>
    </fileSet>
    <fileSet>
      <!-- chose NOT to filter because maven killed special chars in the process
           same goes for the lineendings -->
      <!--lineEnding>crlf</lineEnding>
      <filtered>false</filtered-->
      <directory>${project.build.directory}/res/</directory>
      <outputDirectory>/</outputDirectory>
      <includes>
        <include>*.txt</include>
      </includes>
    </fileSet>
  </fileSets>
  <files>
    <file>
      <source>icon/openjump_icon3.ico</source>
      <destName>oj.ico</destName>
      <outputDirectory>/lib/icons/</outputDirectory>
    </file>
    <file>
      <source>icon/openjump_icon3.png</source>
      <destName>oj.png</destName>
      <outputDirectory>/lib/icons/</outputDirectory>
    </file>
  </files>
</component>